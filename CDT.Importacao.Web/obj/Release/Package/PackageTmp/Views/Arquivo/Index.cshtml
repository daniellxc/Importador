@using GridMvc.Html
@using CDT.Importacao.Data.DAL.Classes

<h2>Histórico de Arquivos</h2>


@Html.ActionLink("Novo", "Cadastro", "", new { @class = "btn btn-primary" })

<div style="font-size:10pt">
@Html.Grid(new ArquivoDAO().ListarTodos().OrderByDescending(a => a.IdArquivo)).Columns(c =>
{
c.Add(x => x.IdArquivo,true).Titled("ID");
c.Add(x => x.NomeArquivo).Titled("Nome");
c.Add(x => x.FK_Layout.NomeLayout).Titled("Layout");
c.Add(x => x.DataRegistro.Date).Titled("Data Registro").Format("{0:dd/MM/yyyy}") ;
c.Add().Encoded(false).Sanitized(false).RenderValueAs(d => StatusArquivo(d.FK_StatusArquivo)).Titled("Status");
c.Add().Encoded(false).Sanitized(false).RenderValueAs(d => DataImportacao(d.DataImportacao)).Titled("Data Processamento");
c.Add().Encoded(false).Sanitized(false).RenderValueAs(d => btnImportar(d));
c.Add().Encoded(false).Sanitized(false).RenderValueAs(d => btnRetorno(d));
c.Add().Encoded(false).Sanitized(false).RenderValueAs(d => @Html.ActionLink(" ", "Editar", new { IdArquivo = d.IdArquivo }, new {@class= "glyphicon glyphicon-edit" }));

}
).EmptyText("Não há registro de importações.").WithPaging(20)
</div>




@helper DataImportacao(DateTime data)
{

if (data.Equals(DateTime.Parse("01/01/1900")))
{
        <span>---</span>
}
else
{
        <span>@data</span>
}

}

@helper StatusArquivo(CDT.Importacao.Data.Model.StatusArquivo status)
{
if (status.IdStatusArquivo.Equals(1))
    {
            <span class="label label-warning">@status.NomeStatus</span>
    }
else if (status.IdStatusArquivo.Equals(2))
    {
            <span class="label label-success">@status.NomeStatus</span>
    }
else
    {
            <span class="label label-danger">@status.NomeStatus</span>
    }
}

@helper btnImportar(CDT.Importacao.Data.Model.Arquivo arquivo)
{
if (arquivo.IdStatusArquivo != 2)
{
        <a class="glyphicon glyphicon-save" style="font-size:12pt" data-toggle="tooltip" title="Importar arquivo @arquivo.NomeArquivo" href=@Url.Action("importar","Arquivo", new {IdArquivo = arquivo.IdArquivo }) onclick="return Confirm('Deseja realmente importar este arquivo?')"></a><br />
        
    }
}

@helper btnRetorno(CDT.Importacao.Data.Model.Arquivo arquivo)
{
if (arquivo.IdStatusArquivo == 2 && arquivo.FK_Layout.TemRetorno)
{
        <a class="glyphicon glyphicon-open" data-toggle="tooltip" title="Gerar arquivo retorno"  href=@Url.Action("MontarArquivoRetorno", "Arquivo", new {IdArquivo = arquivo.IdArquivo }) onclick="return Confirm('Confirma a geração do arquivo de retorno?')"></a>
}
}



