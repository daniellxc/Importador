@using GridMvc.Html
@using CDT.Importacao.Data.DAL.Classes




<h2>Subcampos</h2>


@if(Session["IdCampo"] != null)
{
    @Html.ActionLink("Novo","Cadastro","Subcampo", new {IdCampo = int.Parse(Session["IdCampo"].ToString())},new {@class="btn btn-primary" } )
   
}
 &nbsp 
@Html.ActionLink("Cancelar", "Suspender", null, new { @class = "btn btn-primary" })

@Html.ActionLink("Tipo Subcampo", "Cadastro","TipoSubcampo", null, new { @class = "btn btn-warning" })

@Html.Grid(new SubcampoDAO().ListarTodos().OrderByDescending(x => x.IdSubcampo)).Columns(c =>
{
    c.Add(x => x.IdSubcampo).Titled("ID");
    c.Add(x => x.FK_Campo.NomeCampo).Titled("Campo").Filterable(true);
    c.Add(x => x.FK_TipoSubcampo.NomeTipoSubcampo).Titled("Tipo").Filterable(true);
    c.Add(x => x.NomeSubcampo).Titled("Nome").Filterable(true).SetWidth(300);
    c.Add().Encoded(false).Sanitized(false).RenderValueAs(d => d.PosInicio.ToString().PadLeft(4, '0') + "-" + d.PosFim.ToString().PadLeft(4, '0')).Titled("Deslocamento");
    c.Add().Encoded(false).Sanitized(false).RenderValueAs(d => @Html.ActionLink("editar", "Editar", new { IdCampo = d.IdCampo }));
    c.Add().Encoded(false).Sanitized(false).RenderValueAs(d => @Html.ActionLink("excluir", "Excluir", new { IdCampo = d.IdCampo }, new { @onclick = "return confirm('Deseja realmente excluir?')" }));

}
).WithPaging(50).WithMultipleFilters()
